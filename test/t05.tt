// -*- mode: c++ -*-
/* Copyright (c) 2012, Eddie Kohler
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, subject to the conditions
 * listed in the Tamer LICENSE file. These conditions include: you must
 * preserve this copyright notice, and you cannot mention the copyright
 * holders in advertising related to the Software without their permission.
 * The Software is provided WITHOUT ANY WARRANTY, EXPRESS OR IMPLIED. This
 * notice is a summary of the Tamer LICENSE file; the license in that file is
 * legally binding.
 */
#include <stdio.h>
#include <unistd.h>
#include <fcntl.h>
#include <signal.h>
#include <tamer/tamer.hh>
#include <tamer/adapter.hh>
#include <string>
#include <stdlib.h>

int n;

uint32_t xseed = 23941792;
uint32_t xrandom() {
    return (xseed = xseed * 1664525 + 1013904223);
}

tamed void test() {
    tvars {
        int j = 0;
        tamer::rendezvous<std::string> r(tamer::rvolatile);
        std::string s;
    }
    for (int i = 0; i < 5000; ++i) {
        tamer::at_delay_usec(xrandom() % 100000,
                             tamer::make_event(r, std::to_string(i)));
    }
    while (j < 10) {
        twait(r, s);
        fprintf(stdout, "%s\n", s.c_str());
        ++j;
    }
}

int main(int, char **) {
    tamer::initialize();
    test();
    tamer::loop();
    tamer::cleanup();
}
